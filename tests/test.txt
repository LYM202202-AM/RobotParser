


PROG


VAR n, x, y;

    PROC putCB (c, b)
{
    drop(c);
    free (b);
    walk(n);
    drop(  12);
    walk     (  03      )                 ;                         
    jumpTo( n,2);
    jumpTo(2,c);
    jumpTo ( 1  ,   0213         )                 ;
    jumpTo(y    ,12);
    veer (    left  )    ;
    look        (       north   )   ;               
    walk  (   left    ,     102123    )      ;                              
    walk  (   south    ,     c    )      ;                             
    walk(north, y);
    if (canWalk(right, 20)) {
        walk(12);
        look(north)
        } else {look(north)} fi;
    while (canWalk (north ,1)) do {
        drop(c);
        free (b);
        walk(n);
        drop(  12);
        walk     (  03      )                 ;                         
        jumpTo( n,2)
        } od;
    veer(left)
}
CORP
PROC goNorth ( )
{

    while (canWalk (north ,1)) do {walk(north ,1)} od
    if (isfacing(north)) {x:=2} fi
    if (isValid(walk, 20)) {x:=2} fi
    if (        isValid (       walk,   n   )     ) {x:=2} fi
    if (        not         (        isValid (       walk,   n   )  )   ) {
        x:=2;
        y:=3
        } fi
    if (canWalk(right, 20)) {walk(12)} else {look(north)} fi

}



PROC goWest ( )
{

    if ( canWalk (west ,1)) {walk(west ,1)} fi
                while(isValid(walk, n))do{grab(10)}od
    repeatTimes 20 {grab(10)} per
    repeatTimes x {grab(10)} per
    repeatTimes a {grab(10)} per

}

CROP



{
go (3 ,3);
n:=6;
putCB (2 ,1)




}

GORP 
